name: Prebuild
on:
  workflow_dispatch:
jobs:
  prebuild:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux
            arch: x64
          - os: ubuntu-22.04-arm
            platform: linux
            arch: arm64
          - os: macos-14
            platform: darwin
            arch: x64
          - os: macos-14
            platform: darwin
            arch: arm64
          - os: windows-2022
            platform: win32
            arch: x64
          - os: windows-2022
            platform: win32
            arch: arm64
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.tags }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: sethvincent/sound-ci-helpers@windows-updates
      - run: |
          choco install vb-cable -y
          choco upgrade llvm
        if: ${{ matrix.platform == 'win32' }}
      - shell: pwsh
        if: ${{ matrix.platform == 'win32' }}
        run: |
          New-Item -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy\' -Force
          New-ItemProperty -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\AppPrivacy\' -Name 'LetAppsAccessMicrophone' -Value 1 -PropertyType DWord
      - run: |
          sudo apt update
          sudo apt install -y \
            libx11-dev \
            libxext-dev \
            libxrandr-dev \
            libxcursor-dev \
            libxi-dev \
            libxfixes-dev \
            libwayland-dev \
            xvfb \
            libpulse-dev \
            pulseaudio
        if: ${{ matrix.platform == 'linux' }}
      - run: pulseaudio -D --start --exit-idle-time=-1
        if: ${{ matrix.platform == 'linux' }}
      - run: |
          brew install switchaudio-osx blackhole-2ch
          sudo pkill coreaudiod || true
          sleep 10
          SwitchAudioSource -s 'BlackHole 2ch' -t input
          SwitchAudioSource -s 'BlackHole 2ch' -t output
        if: ${{ matrix.platform == 'darwin' }}
      - run: npm install -g bare-runtime bare-make
      - run: npm install
      - run: bare-make generate --platform ${{ matrix.platform }} --arch ${{ matrix.arch }} ${{ matrix.flags }}
      - run: bare-make build
      - run: bare-make install
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.tags }}
          path: prebuilds/*
  merge:
    runs-on: ubuntu-latest
    needs: prebuild
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: prebuilds
          merge-multiple: true
      - uses: actions/upload-artifact@v4
        with:
          name: prebuilds
          path: prebuilds
